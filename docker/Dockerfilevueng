# stage1 as builder
#FROM nginx:alpine as builder

FROM node:latest
WORKDIR /usr/app/backend

#RUN apt-get update && apt-get install npm
#RUN npm install
#RUN npm run dev
HEALTHCHECK --interval=1m --timeout=3s \
  CMD npm install
  CMD npm run dev -- --host
  #CMD npm run dev || exit 1
#RUN npm run dev
#HEALTHCHECK --interval=1m --timeout=3s \
#  CMD npm install

#COPY ../backend/package.json ./
#RUN npm install --quiet
#COPY . .
#WORKDIR /var/www/backend

# Copy the package.json and install dependencies COPY package*.json ./

#COPY ../backend/package*.json ./
##RUN apk update
#RUN apk add
#RUN apk add npm
#HEALTHCHECK --interval=1m --timeout=3s \
#  CMD /bin/sh -c npm install || exit 1
#  CMD npm run dev
#RUN /bin/sh -c npm install
#RUN npm install  --prefix /var/www/backend/
#RUN npm install
#RUN npm install
#RUN npm install
#ADD start-gulp.sh .
#CMD chmod 777 /etc/nginx/conf.d/start-gulp.sh
#RUN ls -al
##RUN npm install
#RUN npm run dev

# Copy rest of the files COPY . .


# Build the project RUN npm run build


# FROM nginx:alpine as production-build
# COPY ./.nginx/nginx.conf /etc/nginx/nginx.conf

## Remove default nginx index page
# RUN rm -rf /usr/share/nginx/html/*

# Copy from the stahg 1
#COPY --from=builder /vue-ui/dist /usr/share/nginx/html

EXPOSE 3000
EXPOSE 3001
#ENTRYPOINT ["nginx", "-g", "daemon off;"]
